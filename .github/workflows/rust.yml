name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - platform: ubuntu-latest
            artifact-path: target/release/fend
            artifact-platform-name: linux
            env-command: ">> $GITHUB_ENV"
          - platform: macos-latest
            artifact-path: target/release/fend
            artifact-platform-name: macos
            env-command: ">> $GITHUB_ENV"
          - platform: windows-latest
            artifact-path: target/release/fend.exe
            artifact-platform-name: windows
            env-command: "| Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append"

    runs-on: ${{ matrix.platform }}

    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v2
    - name: Update Rust
      run: rustup update
    - name: Clippy
      if: ${{ matrix.platform == 'ubuntu-latest' }}
      run: |
        rustup component add clippy
        cargo clippy --workspace --all-targets --all-features -- -D warnings
    - name: Check format
      if: ${{ matrix.platform == 'ubuntu-latest' }}
      run: cargo fmt -- --check
    - name: Build
      run: cargo build --release --workspace
    - name: Get version
      run: echo "FEND_VERSION=$(cargo run --release -- --version)" ${{ matrix.env-command }}
    - name: Run tests
      run: cargo test --workspace -- --nocapture
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: fend-${{ env.FEND_VERSION }}-${{ matrix.artifact-platform-name }}
        path: ${{ matrix.artifact-path }}
        if-no-files-found: error

  web:
    runs-on: "ubuntu-latest"
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - name: Update Rust
      run: rustup update
    - name: Compile fend-wasm
      run: |
        curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
        (cd wasm && wasm-pack build --target no-modules --out-dir ../web/pkg)
        rm web/pkg/.gitignore
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.MY_TOKEN }}
        publish_dir: ./web
        external_repository: printfn/fend-website
        force_orphan: true
        # cname: custom.website
